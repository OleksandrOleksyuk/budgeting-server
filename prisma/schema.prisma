datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
 
generator client {
  provider = "prisma-client-js"
}
 
model User {
  id            String         @id @default(uuid())
  username      String?         
  email         String?         @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  transactions  Transaction[]
  balance       Balance[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String?
  sessionState      String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
}

enum TransactionType {
  INCOME
  EXPENSE
}

model Category {
  id           Int             @id @default(autoincrement())
  name         String
  type         TransactionType
  createdAt    DateTime        @default(now())
  transactions Transaction[]
}

model Transaction {
  id          Int             @id @default(autoincrement())
  amount      Float
  description String
  type        TransactionType
  category    Category        @relation(fields: [categoryId], references: [id])
  categoryId  Int
  user        User            @relation(fields: [userId], references: [id])
  userId      String
  date        DateTime        @default(now())
}

model Balance {
  id        Int      @id @default(autoincrement())
  amount    Float
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}
